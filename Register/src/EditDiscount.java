
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditClient.java
 *
 * Created on 21 серп 2009, 13:39:02
 */

/**
 *
 * @author User
 */
public class EditDiscount extends javax.swing.JDialog {

    /** Creates new form EditClient */
    public EditDiscount(Dialog owner,boolean modal, int id_client, String docsNumbers,String clientName) {
        
        super(owner, modal);
        setId(id_client);
        this.docsNumbers=docsNumbers;
        initComponents();
        nameClient.setText(clientName);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        skladCombo = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        discTextField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        groupLabel = new javax.swing.JLabel();
        groupButton = new javax.swing.JButton();
        allDiscountButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        recalcButton = new javax.swing.JButton();
        nameClient = new javax.swing.JLabel();

        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel5.setText("Скидки");

        jLabel6.setText("Склад:");

        skladCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        skladCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skladComboActionPerformed(evt);
            }
        });

        jLabel7.setText("Скидка");

        discTextField.setText("jTextField1");
        discTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                discTextFieldFocusGained(evt);
            }
        });
        discTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discTextFieldActionPerformed(evt);
            }
        });

        cancelButton.setText("Закрыть");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        groupLabel.setText("Группа:");

        groupButton.setText("Все группы");
        groupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupButtonActionPerformed(evt);
            }
        });

        allDiscountButton.setText("Все скидки");
        allDiscountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allDiscountButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Удалить скидку");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        recalcButton.setText("Пересчитать накладные");
        recalcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recalcButtonActionPerformed(evt);
            }
        });

        nameClient.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameClient.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(discTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(allDiscountButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(recalcButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(groupLabel)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(skladCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(groupButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(nameClient, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(cancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(nameClient)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(skladCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(groupLabel)
                    .addComponent(groupButton))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(discTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allDiscountButton)
                    .addComponent(recalcButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        try{
            ResultSet rs=DataSet.QueryExec("select trim(name) from sklad order by upper(trim(name))", false);
            skladCombo.removeAllItems();
            while(rs.next()){
                skladCombo.addItem(rs.getString(1));
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
        skladCombo.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent evt){
                try{
                    ResultSet rs=DataSet.QueryExec("select disc from discount where id_client="+getId()+" and id_skl=(select id_skl from sklad where name='"+skladCombo.getSelectedItem()+"') and id_group is null", false);
                    if (rs.next())
                        discTextField.setText(rs.getString(1));
                    else
                        discTextField.setText("0");
                    setIdGroupForDiscount(-2);
                    groupButton.setText("Все группы");
                }catch(Exception e){
                    e.printStackTrace();
                }
                groupButton.setText("Все группы");
            }
        });
        skladCombo.setSelectedIndex(0);
    }//GEN-LAST:event_formComponentShown

    private void skladComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skladComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_skladComboActionPerformed

    private void discTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discTextFieldActionPerformed
        try{
            if (getIdGroupForDiscount()==-2){
                DataSet.UpdateQuery("delete from discount where id_client="+getId()+" and id_skl=(select id_skl from sklad where name='"+skladCombo.getSelectedItem()+"') and id_group is null");
                DataSet.UpdateQuery("insert into discount (id_client,  disc, id_skl) select "+getId()+" as id_client, "+discTextField.getText()+" as disc, id_skl from sklad where name='"+skladCombo.getSelectedItem()+"'");

            }else{
                DataSet.UpdateQuery("delete from discount where id_client="+getId()+" and id_skl=(select id_skl from sklad where name='"+skladCombo.getSelectedItem()+"') and id_group="+getIdGroupForDiscount());
                DataSet.UpdateQuery("insert into discount (id_client,  disc, id_skl, id_group) select "+getId()+" as id_client, "+discTextField.getText()+" as disc, id_skl, "+getIdGroupForDiscount()+" as id_group from sklad where name='"+skladCombo.getSelectedItem()+"'");

            }
            DataSet.commit();
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_discTextFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void groupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupButtonActionPerformed
        if (groupWindow!=null)
            return;
        groupWindow=new ChooseGroupForDiscount(this,true);

        groupWindow.setVisible(true);
        setIdGroupForDiscount(groupWindow.getIdSelected());
        if (getIdGroupForDiscount()!=-2){
            try{
                Integer disc=0;
                String SQL=String.format("select disc from discount where id_client=%s and id_skl=(select id_skl from sklad where name='%s') and id_group=%s", getId(),skladCombo.getSelectedItem(),getIdGroupForDiscount());
                ResultSet rs=DataSet.QueryExec(SQL, false);
                if (rs.next()){
                    disc=rs.getInt(1);
                }
                discTextField.setText(disc.toString());
                SQL=String.format("Select trim(name) from groupid where id_group=%s", getIdGroupForDiscount());
                rs=DataSet.QueryExec(SQL, false);
                rs.next();
                groupButton.setText(rs.getString(1));
            }
            catch(Exception ex){
                ex.printStackTrace();
        }
        }else{
            try{
                Integer disc=0;
                String SQL=String.format("select disc from discount where id_client=%s and id_skl=(select id_skl from sklad where name='%s') and id_group is null", getId(),skladCombo.getSelectedItem());
                ResultSet rs=DataSet.QueryExec(SQL, false);
                if (rs.next()){
                    disc=rs.getInt(1);
                }
                discTextField.setText(disc.toString());
                groupButton.setText("Все группы");
            }
            catch(Exception ex){
                ex.printStackTrace();
            }
        }
         groupWindow.dispose();
         groupWindow=null;
        
    }//GEN-LAST:event_groupButtonActionPerformed

    private void allDiscountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allDiscountButtonActionPerformed
        if (allDiscount!=null)
            return;
        allDiscount=new ListWithDiscount(this, true,getId());
//        setModal(false);

        allDiscount.setVisible(true);
        allDiscount.dispose();
        allDiscount=null;
//        setModal(true);
    }//GEN-LAST:event_allDiscountButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         if (JOptionPane.showConfirmDialog(this, "Удалить скидку?", "Удаление", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION){
             String SQL;
             if (getIdGroupForDiscount()==-2){
                 SQL=String.format("delete from discount where id_client=%s and id_group is null and id_skl=(select id_skl from sklad where name='%s')", getId(),skladCombo.getSelectedItem());
             }else{
                 SQL=String.format("delete from discount where id_client=%s and id_group=%s and id_skl=(select id_skl from sklad where name='%s')", getId(),getIdGroupForDiscount(),skladCombo.getSelectedItem());
             }
             try{
                 DataSet.QueryExec(SQL, true);
             }catch(Exception ex){
                 ex.printStackTrace();
             }
         }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void discTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_discTextFieldFocusGained
        discTextField.selectAll();
    }//GEN-LAST:event_discTextFieldFocusGained

    private void recalcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recalcButtonActionPerformed
/*
merge into lines l using (select l_row,nvl(new_disc,0) as new_disc from (select t.l_row,t.disc,t.id_tovar,t.id_group,t.id_skl,nd.discount,alld.disc as new_disc from ((select l.rowid l_row, l.disc, l.id_tovar, k.id_group, d.ID_SKL from lines l, (select distinct ID_TOVAR,id_group from kart) k,document d where l.ID_DOC=d.ID_DOC and d.numb in (49078,49079,49080,49081,49082) and to_char(d.day,'DD.MM.YYYY')=to_char(sysdate,'DD.MM.YYYY') and l.ID_TOVAR=k.id_tovar) t 
left join (select CONNECT_BY_ROOT disc discount, id_group,CONNECT_BY_ROOT id_skl id_skl from (select distinct g.id_group,g.PARENT_GROUP,d.disc,d.id_skl from GROUPID g left join (select id_group,disc,id_skl from discount where ID_CLIENT=15766) d on d.ID_GROUP=g.ID_GROUP start with g.ID_GROUP in (select id_group from discount where ID_CLIENT=15766 and ID_GROUP is not null) CONNECT by g.PARENT_GROUP=prior g.ID_GROUP) start with not (disc is null) connect by parent_group= prior id_group and disc is null) nd on t.id_skl=nd.id_skl and t.id_group=nd.id_group) left join (select id_skl,disc from discount where ID_CLIENT=15766 and ID_GROUP is null) alld
on t.id_skl=alld.ID_SKL) ttt where ttt.disc!=nvl(ttt.new_disc,0)) table1 on (l.rowid=table1.l_row) when matched then update set l.old_disc=l.disc,l.disc=table1.new_disc
        */
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Пересчитать и распечатать отмеченные документы?", "Печать", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION){
            String SQL;
            SQL=String.format("merge into lines l using (select l_row,nvl(new_disc,0) as new_disc from (select t.l_row,t.disc,t.id_tovar,t.id_group,t.id_skl,nd.discount,alld.disc as new_disc from ((select l.rowid l_row, l.disc, l.id_tovar, k.id_group, d.ID_SKL from lines l, (select distinct ID_TOVAR,id_group from kart) k,document d where l.ID_DOC=d.ID_DOC and d.numb in ($2%s) and to_char(d.day,'DD.MM.YYYY')=to_char(sysdate,'DD.MM.YYYY') and l.ID_TOVAR=k.id_tovar) t "+
                    "left join (select CONNECT_BY_ROOT disc discount, id_group,CONNECT_BY_ROOT id_skl id_skl from (select distinct g.id_group,g.PARENT_GROUP,d.disc,d.id_skl from GROUPID g left join (select id_group,disc,id_skl from discount where ID_CLIENT=$1%s) d on d.ID_GROUP=g.ID_GROUP start with g.ID_GROUP in (select id_group from discount where ID_CLIENT=$1%s and ID_GROUP is not null) CONNECT by g.PARENT_GROUP=prior g.ID_GROUP) start with not (disc is null) connect by parent_group= prior id_group and disc is null) nd on t.id_skl=nd.id_skl and t.id_group=nd.id_group) left join (select id_skl,disc from discount where ID_CLIENT=$1%s and ID_GROUP is null) alld "+
                    "on t.id_skl=alld.ID_SKL) ttt where ttt.disc!=nvl(ttt.new_disc,0)) table1 on (l.rowid=table1.l_row) when matched then update set l.old_disc=l.disc,l.disc=table1.new_disc"
                    , getId(),docsNumbers);
            try{
                int kol=DataSet.UpdateQuery(SQL);
                if (kol==0) {
                    JOptionPane.showMessageDialog(this, "Документы не изменились. Печатать нечего.", "Нечего печатать", JOptionPane.INFORMATION_MESSAGE);
                }
                SQL=String.format("merge into document d using " +
                "(select id_doc,sum(kol*cost*(1-disc/100)) as sum from lines where ID_DOC in (select ID_DOC from document where numb in (%s) and to_char(day,'DD.MM.YYYY')=to_char(sysdate,'DD.MM.YYYY') ) group by id_doc) s " +
                "on (d.id_doc=s.id_doc )" +
                "when matched then " +
                "update set d.sum=s.sum"
                        , docsNumbers);
                DataSet.UpdateQuery(SQL);
                DataSet.commit();
            }catch(Exception ex){
                try {
                    DataSet.rollback();
                } catch (SQLException ex1) {
                    Logger.getLogger(EditDiscount.class.getName()).log(Level.SEVERE, null, ex1);
                }
                JOptionPane.showMessageDialog(this, "Ошибка обновления. Документы не обновлены", "Ощибка", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
                return;
            }
        }
    }//GEN-LAST:event_recalcButtonActionPerformed
    /**
    * @param args the command line arguments
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allDiscountButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField discTextField;
    private javax.swing.JButton groupButton;
    private javax.swing.JLabel groupLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel nameClient;
    private javax.swing.JButton recalcButton;
    private javax.swing.JComboBox skladCombo;
    // End of variables declaration//GEN-END:variables
    protected int id;
    private String docsNumbers;
    private int idGroupForDiscount;
    private ListWithDiscount allDiscount;
    private ChooseGroupForDiscount groupWindow;
            
    public int getIdGroupForDiscount() {
        return idGroupForDiscount;
    }

    public void setIdGroupForDiscount(int idGroupForDiscount) {
        this.idGroupForDiscount = idGroupForDiscount;
    }


    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

}
